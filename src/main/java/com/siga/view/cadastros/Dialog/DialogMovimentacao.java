
package com.siga.view.cadastros.Dialog;

import com.siga.model.Categoria;
import com.siga.model.Fornecedor;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Julio
 */
public class DialogMovimentacao extends javax.swing.JFrame implements DialogEntidade{

    /**
     * Creates new form Categoria
     */
    public DialogMovimentacao() {
        initComponents();
        getjComboBoxCategoria().setVisible(false);
        getjComboBoxFornecedor().setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabelNome = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        buttonCadastrar = new javax.swing.JButton();
        jTextFieldDescricao = new javax.swing.JTextField();
        jLabelDescricao = new javax.swing.JLabel();
        jComboBoxFornecedor = new javax.swing.JComboBox<>();
        jComboBoxCategoria = new javax.swing.JComboBox<>();
        jCheckBoxFonecedor = new javax.swing.JCheckBox();
        jCheckBoxCategoria = new javax.swing.JCheckBox();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jLabelNome.setText("Nome do produto:");

        jTextFieldNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomeActionPerformed(evt);
            }
        });

        buttonCadastrar.setText("Salvar");
        buttonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCadastrarActionPerformed(evt);
            }
        });

        jTextFieldDescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDescricaoActionPerformed(evt);
            }
        });

        jLabelDescricao.setText("Descrição:");

        jComboBoxFornecedor.setToolTipText("");

        jComboBoxCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCategoriaActionPerformed(evt);
            }
        });

        jCheckBoxFonecedor.setText("Fornecedor");
        jCheckBoxFonecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxFonecedorActionPerformed(evt);
            }
        });

        jCheckBoxCategoria.setText("Categoria");
        jCheckBoxCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxCategoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxCategoria)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(buttonCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelNome)
                            .addComponent(jTextFieldNome, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                            .addComponent(jLabelDescricao)
                            .addComponent(jTextFieldDescricao, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                            .addComponent(jCheckBoxFonecedor)
                            .addComponent(jComboBoxFornecedor, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 91, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabelNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelDescricao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxCategoria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jCheckBoxFonecedor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonCadastrar)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomeActionPerformed

    private void buttonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCadastrarActionPerformed
        
        
    }//GEN-LAST:event_buttonCadastrarActionPerformed

    private void jTextFieldDescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDescricaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDescricaoActionPerformed

    private void jCheckBoxFonecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxFonecedorActionPerformed
        // TODO add your handling code here:
        getjComboBoxFornecedor().setVisible(jCheckBoxFonecedor.isSelected());
    }//GEN-LAST:event_jCheckBoxFonecedorActionPerformed

    private void jCheckBoxCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxCategoriaActionPerformed
        // TODO add your handling code here:

        getjComboBoxCategoria().setVisible(jCheckBoxCategoria.isSelected());
    }//GEN-LAST:event_jCheckBoxCategoriaActionPerformed

    private void jComboBoxCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxCategoriaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void iniciar() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogMovimentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogMovimentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogMovimentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogMovimentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DialogMovimentacao().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCadastrar;
    private javax.swing.JCheckBox jCheckBoxCategoria;
    private javax.swing.JCheckBox jCheckBoxFonecedor;
    private javax.swing.JComboBox<Categoria> jComboBoxCategoria;
    private javax.swing.JComboBox<Fornecedor> jComboBoxFornecedor;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabelDescricao;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JTextField jTextFieldDescricao;
    private javax.swing.JTextField jTextFieldNome;
    // End of variables declaration//GEN-END:variables

    
        //Metodo para abrir um pop-up com uma mensagem
    @Override
    public void showMessage(String message){
        JOptionPane.showMessageDialog(jDialog1, message);     }
        //Adicionar um "ouvidor" de eventos no botão de cadastrar
    @Override
    public void addEntidadeListener(ActionListener listener){
        for(ActionListener al : buttonCadastrar.getActionListeners()){
            buttonCadastrar.removeActionListener(al);
        }
        buttonCadastrar.addActionListener(listener);
    }
    
    @Override
    public void limparInputs(){
        setNome("");
        setDescricao("");
        jCheckBoxCategoria.setSelected(false);
        jCheckBoxFonecedor.setSelected(false);
        jComboBoxCategoria.setSelectedItem(null);
        jComboBoxFornecedor.setSelectedItem(null);
        jComboBoxCategoria.setVisible(false);
        jComboBoxFornecedor.setVisible(false);
    }
    
    @Override
    public void setVisible(boolean b){
        super.setVisible(b);
    }
    
    public String getNome(){
        
        return jTextFieldNome.getText();
    }
    
    public void setNome(String nome){
        jTextFieldNome.setText(nome);
    }
    
    public String getDescricao(){
        return jTextFieldDescricao.getText();
    }
    
    public void setDescricao(String descricao){
        jTextFieldDescricao.setText(descricao);
    }

    public void carregarComboBoxCategoria(List<Categoria> categorias) {
    jComboBoxCategoria.removeAllItems();

    if (categorias != null && !categorias.isEmpty()) {
        for (Categoria c : categorias) {
            jComboBoxCategoria.addItem(c);
        }
        jComboBoxCategoria.setEnabled(true);
    }else{
        jComboBoxCategoria.setEnabled(false);
        }
}

    
    public void carregarComboBoxFornecedor(List<Fornecedor> fornecedores) {
        jComboBoxFornecedor.removeAllItems();

        if (fornecedores != null && !fornecedores.isEmpty()) {
            for (Fornecedor f : fornecedores) {
                jComboBoxFornecedor.addItem(f);
            }
            jComboBoxFornecedor.setEnabled(true);
        } else {
            jComboBoxFornecedor.setEnabled(false);
        }
    }

    public Categoria getSelectedCategoria(){
        return jComboBoxCategoria.getItemAt(jComboBoxCategoria.getSelectedIndex());
    }
    
    public void setSelectedCategoria(Categoria c){
        jComboBoxCategoria.setSelectedItem(c);
    }
    
    public Fornecedor getSelectedFornecedor(){
        return jComboBoxFornecedor.getItemAt(jComboBoxFornecedor.getSelectedIndex());
    }
    
    public void setSelectedFornecedor(Fornecedor f){
        jComboBoxFornecedor.setSelectedItem(f);
    }

    public JComboBox<Categoria> getjComboBoxCategoria() {
        return jComboBoxCategoria;
    }

    public JComboBox<Fornecedor> getjComboBoxFornecedor() {
        return jComboBoxFornecedor;
    }  

    public boolean getjCheckBoxCategoria() {
        return jCheckBoxCategoria.isSelected();
    }

    public boolean getjCheckBoxFonecedor() {
        return jCheckBoxFonecedor.isSelected();
    }

    
    
    public void setVisibleComboBox(JComboBox box, boolean b){
        box.setVisible(b);
    }

    public void setCheckBoxCategoriaVisible(boolean b) {
        this.jCheckBoxCategoria.setVisible(b);
    }
    
    public void setCheckBoxCategoriaSelected(boolean b){
        jCheckBoxCategoria.setSelected(b);
    }
    
    public void setCheckBoxFornecedorSelected(boolean b){
        jCheckBoxFonecedor.setSelected(b);
    }

    public void setCheckBoxFonecedorVisible(boolean b) {
        this.jCheckBoxFonecedor.setVisible(b);
    }
    
    
    

    

}
